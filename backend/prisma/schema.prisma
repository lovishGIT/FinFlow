generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    USER
    MERCHANT
    ACCOUNTANT
    ADMIN
}

model User {
    id        String   @db.VarChar() @id @default(uuid())
    email     String   @db.VarChar() @unique
    name      String   @db.VarChar()
    role      Role     @default(USER)

    verified  Boolean  @default(false)
    token     String?  @db.Text() @default("")

    password  String   // Hashed password
    balance   Float    @default(0)

    ChatQuery ChatQuery[]

    expenses  String[] @db.VarChar() // Handle This Manually
    incomes   String[] @db.VarChar() // Handle This Manually

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Expense { // Handle User Manually
    id          String   @db.VarChar() @id @default(uuid())
    title       String   @db.VarChar() @default("Miscellaneous")
    amount      Float
    date        DateTime @default(now())

    senderId    String  @db.VarChar() // Current User
    receiverId  String  @db.VarChar() // User who received

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Income { // Handle User Manually
    id          String   @db.VarChar() @id @default(uuid())
    title       String   @db.VarChar() @default("Miscellaneous")
    amount      Float
    date        DateTime @default(now())

    senderId    String  @db.VarChar() // User who sent
    receiverId  String  @db.VarChar() // Current User

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model ChatQuery { // ChatBot Queries AI
    id          String   @db.VarChar() @id @default(uuid())
    message     String   @db.VarChar()

    userId      String   @db.VarChar()
    user        User     @relation(fields: [userId], references: [id])

    createdAt   DateTime @default(now())
}